:root {
	--padding-y: 0.75rem;
	--padding-x: 1.25rem;
	--border: 1px solid rgba(128, 128, 128, 0.2);
	--border-transparent: 1px solid transparent;
	--transition: all 0.2s ease;
	--box-shadow: 0 0.125rem 1.5rem 0 rgba(0, 0, 0, 0.1);
	--border-radius: 0.25rem;
	--color: hsl(0, 0%, 10%);
	--color-hover: hsl(0, 0%, 15%);
	--color-active: hsl(0, 0%, 20%);
}

* {
	margin: 0;
	padding: 0;
	outline: 0;
	border: 0;
	box-sizing: border-box;
	box-shadow: 0;
	font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
	font-weight: 300;
	font-size: inherit;
	min-width: 0;
	line-height: 1.5;
	position: relative;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	-webkit-appearance: none;
	-moz-appearance: none;
	text-rendering: optimizeLegibility !important;
	-webkit-font-smoothing: antialiased !important;
}

body {
	max-width: 80rem;
	font-size: 1.125rem;
}

#main {
	min-height: 100vh;
	display: grid;
	grid-template-columns: 0 auto 0;
	gap: 1rem;
	overflow: hidden;
}

#main>main {
	padding-bottom: 1rem;
}

header {
	padding: 1.5rem 1rem 1rem 1rem;
	height: 4rem;
	border-bottom: var(--border);
}

#menu-button {
	display: inline-block;
	width: 4rem;
	height: 4rem;
	background-color: var(--color);
	border-radius: 4rem;
	position: fixed;
	bottom: 1rem;
	right: 1rem;
	z-index: 2000;
	box-shadow: var(--box-shadow);
	transition: var(--transition);
}

#menu-button:active {
	transform: scale(0.9);
}

#menu-button+aside {
	width: 16rem;
	height: 100vh;
	position: fixed;
	top: 0;
	left: 0;
	background-color: var(--color);
	background-image: url('./images/logo.svg');
	background-position-y: bottom;
	background-repeat: no-repeat;
	background-size: contain;
	transform: translateX(-16rem);
	z-index: 1000;
	transition: var(--transition);
}

#menu-button:checked+aside {
	transform: translateX(0rem);
}

aside nav {
	width: 100%;
	height: 100%;
}

aside nav ul {
	list-style: none;
}

aside nav ul li {
	border-top-right-radius: var(--border-radius);
	border-bottom-right-radius: var(--border-radius);
	display: block;
}

aside nav ul li a {
	display: block;
	padding: var(--padding-y) var(--padding-x);
	white-space: nowrap;
	text-decoration: none;
	color: hsl(0, 0%, 95%);
	border-bottom: var(--border-transparent);
}

aside a {
	transition: var(--transition);
}

aside a:hover {
	background-color: var(--color-hover);
}

aside a.active {
	background-color: var(--color-active);
	color: #FFFFFF;
}

.ads {
	background-color: #F8F8F8;
}

button {
	width: 100%;
	padding: 0.75rem 1rem;
	border: var(--border);
	border-radius: var(--border-radius);
	background-color: var(--color);
	color: rgba(255, 255, 255, 0.9);
	transition: all 0.2s ease;
	cursor: pointer;
}

button:hover {
	background-color: var(--color-hover);
	color: #FFFFFF;
}

button:active {
	background-color: var(--color-active);
	color: #FFFFFF;
}

input, textarea {
	width: 100%;
	padding: 0.75rem 1rem;
	border: var(--border);
	border-radius: var(--border-radius);
	resize: none;
}

input:focus, input:active {
	border: var(--border);
}

input:read-only {
	background-color: #F2F2F2;
}

/** checkboxes **/

input[type="checkbox"]:not(:checked), input[type="checkbox"]:checked {
	display: none;
}

input[type="checkbox"]:not(:checked)+label, input[type="checkbox"]:checked+label {
	position: relative;
	padding-left: 4.25rem;
	cursor: pointer;
}

input[type="checkbox"]:not(:checked)+label:before, input[type="checkbox"]:checked+label:before, input[type="checkbox"]:not(:checked)+label:after, input[type="checkbox"]:checked+label:after {
	content: "";
	position: absolute;
	height: 2rem;
	transition: all 0.15s ease;
}

input[type="checkbox"]:not(:checked)+label:before, input[type="checkbox"]:checked+label:before {
	left: 0;
	top: 0;
	width: 3.25rem;
	border: var(--border);
	background-color: #ECEFF1;
	border-radius: 0.25rem;
	z-index: 1;
}

input[type="checkbox"]:not(:checked)+label:after, input[type="checkbox"]:checked+label:after {
	left: 0;
	top: 0;
	border: 1px solid #26323820;
	background-color: #FFFFFF;
	border-radius: 0.25rem;
	width: 2rem;
	z-index: 2;
}

input[type="checkbox"]:checked+label:after {
	left: 1.25rem;
	border-color: #ECEFF1;
}

input[type="checkbox"]:checked+label:before {
	background-color: #ECEFF1;
	border-color: #ECEFF1;
}

/** radios **/

input[type="radio"]:not(:checked), input[type="radio"]:checked {
	display: none;
}

input[type="radio"]:not(:checked)+label, input[type="radio"]:checked+label {
	display: inline-block;
	position: relative;
	padding: 0.75rem 1rem 0.75rem calc(1.75rem + 1rem);
	border: 1px solid transparent;
	cursor: pointer;
}

input[type="radio"]:not(:checked)+label:before, input[type="radio"]:checked+label:before, input[type="radio"]:not(:checked)+label:after, input[type="radio"]:checked+label:after {
	content: "";
	position: absolute;
	transition: all 0.2s ease;
}

input[type="radio"]:not(:checked)+label:before, input[type="radio"]:checked+label:before {
	left: 0;
	top: calc(0.75rem - 0.25rem);
	width: 2rem;
	height: 2rem;
	border: var(--border);
	border-radius: 16rem !important;
	z-index: 1;
}

input[type="radio"]:not(:checked)+label:after, input[type="radio"]:checked+label:after {
	left: 0.25rem;
	top: 0.75rem;
	border: var(--border) !important;
	background-color: var(--color);
	border-radius: 16rem !important;
	width: 1.5rem;
	height: 1.5rem;
	z-index: 2;
	transform: scale(0);
}

input[type="radio"]:checked+label:after {
	transform: scale(1);
}

/** settings **/

.settings {
	display: grid;
	grid-template-columns: repeat(1, 1fr);
	gap: 1rem;
}

/** merge **/

.merge {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	border: var(--border);
	border-radius: var(--border-radius);
}

/** merge radio **/

.merge>input[type="radio"]:not(:checked), input[type="radio"]:checked {
	display: none;
}

.merge>input[type="radio"]+label {
	display: block;
	text-align: center;
	padding: var(--padding-y) 0;
	cursor: pointer;
	border-right: var(--border);
	transition: var(--transition);
}

.merge>input[type="radio"]:first-child+label {
	border-top-left-radius: var(--border-radius) !important;
	border-bottom-left-radius: var(--border-radius) !important;
}

.merge>input[type="radio"]+label:last-child {
	border-top-right-radius: var(--border-radius) !important;
	border-bottom-right-radius: var(--border-radius) !important;
	border-right: none;
}

.merge>input[type="radio"]:checked+label {
	background-color: var(--color);
	color: rgba(255, 255, 255, 0.9);
}

.merge>input[type="radio"]+label:before, .merge>input[type="radio"]+label:after {
	display: none;
}

h1 {
	display: block;
	height: 3rem;
	line-height: 3rem;
	font-size: 2rem;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	border: var(--border-transparent);
}

h2 {
	display: block;
	height: 2.5rem;
	line-height: 2.5rem;
	font-size: 1.75rem;
	border: var(--border-transparent);
}

h3 {
	display: block;
	height: 3rem;
	line-height: 3rem;
	font-size: 1.5rem;
	border: var(--border-transparent);
}

em {
	font-size: 1.125rem;
	font-style: normal;
}

hr {
	margin: 1rem 0;
	height: 0px;
	border-bottom: var(--border);
}

strong {
	font-weight: 600;
}

.color-palette {
	display: grid;
	grid-template-columns: repeat(1, 1fr);
	gap: 0;
}

.color {
	position: relative;
	margin: 0;
	padding: 3.4rem 1rem;
	padding: 1.25rem 0 1rem 0;
	border: 0;
	transition: var(--transition);
	display: inline-block;
	text-align: center;
	color: #FFFFFF;
	text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
	cursor: pointer;
	animation: append 0.4s ease;
}

.color::after {
	position: absolute;
	top: 0;
	left: 0;
	display: inline;
	font-size: 0.75rem;
	padding: 0.25rem 0.5rem;
	content: attr(data-lightness);
	z-index: 2;
}

.material .color {
	display: block;
	padding: 1.25rem 0 1rem 0;
}

.rotate {
	transition: all 0.6s ease;
	transform: rotate(135deg);
}

/** logo **/

.logo {
	border-bottom: var(--border);
	color: hsl(0, 0%, 95%);
	padding: 1.125rem;
}

.icon {
	background-size: 1.25rem;
	background-repeat: no-repeat;
	background-position: center;
}

.icon-left {
	background-position-x: 1rem;
}

.icon-right {
	background-position-x: calc(100% - 1rem);
}

button>span.icon {
	width: 3.25rem;
	height: 3.25rem;
	position: absolute;
	top: 0;
	left: 0;
}

.icon-home {
	background-image: url('./images/home.svg');
}

.icon-gear {
	background-image: url('./images/gear.svg');
}

.icon-palette {
	background-image: url('./images/palette.svg');
}

.icon-shader {
	background-image: url('./images/shader.svg');
}

.icon-mixer {
	background-image: url('./images/mixer.svg');
}

.icon-menu {
	background-image: url('./images/menu.svg');
}

/** drag & drop **/

.draggables {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	gap: 0.5rem;
}

[draggable] {
	height: 3rem;
	line-height: 3rem;
	transition: all 0.2s ease;
	display: inline-block;
	text-align: center;
	color: #FFFFFF;
	cursor: pointer;
	border-radius: var(--border-radius);
	border: 0;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

[dropzone] {
	position: relative;
	display: grid;
	grid-template-columns: repeat(12, 1fr);
	gap: 0.5rem;
	min-height: 3rem;
	transition: all 0.4s ease;
	border-radius: 0.25rem;
}

.visible {
	transform: scale(0.5);
}

.hidden {
	transform: scale(0);
}

.shrink {
	width: 0px;
}

.removed {
	display: none;
}

.red {
	background-color: #CC0000;
}

.green {
	background-color: #009900;
}

.blue {
	background-color: #0000CC;
}

.white {
	background-color: white;
}

.black {
	background-color: black;
}

.grid-cols {
	display: grid;
	grid-template-columns: repeat(12, 1fr);
}

.gap {
	gap: 1rem;
}

.gap-half {
	gap: 0.5rem;
}

.span-1 {
	grid-column: span 1;
}

.span-2 {
	grid-column: span 2;
}

.span-3 {
	grid-column: span 3;
}

.span-4 {
	grid-column: span 4;
}

.span-6 {
	grid-column: span 6;
}

.span-12 {
	grid-column: span 12;
}

/** text align **/

.text-center {
	text-align: center;
}

/** bg **/

.bg-1 {
	background-color: #F2F2F2;
}

.bg-2 {
	background-color: #E6E6E6;
}

.bg-3 {
	background-color: #D9D9D9;
}

/** colors **/

.color-1 {
	color: #0D0D0D;
}

.color-2 {
	color: #1A1A1A;
}

.color-3 {
	color: #262626;
}

.color-4 {
	color: #333333;
}

.color-5 {
	color: #404040;
}

.color-6 {
	color: #4D4D4D;
}

/** show hide **/

.scale-0 {
	transform: scale(0);
}

.scale-1 {
	transform: scale(1);
}

/** positions **/

.absolue {
	position: absolute;
}

.relative {
	position: relative;
}

/** animations **/

@keyframes fade {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes blink {
	0% {
		opacity: 1;
	}
	25% {
		opacity: 0.5;
	}
	50% {
		opacity: 1;
	}
	75% {
		opacity: 0.5;
	}
	100% {
		opacity: 1;
	}
}

@keyframes bounce {
	0%, 20%, 40%, 60%, 80%, 100% {
		transform: translateY(0);
	}
	10% {
		transform: translateY(-1.5rem);
	}
	30% {
		transform: translateY(-1rem);
	}
	50% {
		transform: translateY(-0.5rem);
	}
	70% {
		transform: translateY(-0.25rem);
	}
	90% {
		transform: translateY(-0.125rem);
	}
}

@keyframes shake {
	0%, 100% {
		transform: translateX(0);
	}
	10%, 30%, 50%, 70%, 90% {
		transform: translateX(-0.5rem);
	}
	20%, 40%, 60%, 80% {
		transform: translateX(0.5rem);
	}
}

@keyframes swing {
	20% {
		transform: rotate(15deg);
	}
	40% {
		transform: rotate(-10deg);
	}
	60% {
		transform: rotate(5deg);
	}
	80% {
		transform: rotate(-5deg);
	}
	100% {
		transform: rotate(0deg);
	}
}

@keyframes wiggle {
	0% {
		transform: skewX(9deg);
	}
	10% {
		transform: skewX(-8deg);
	}
	20% {
		transform: skewX(7deg);
	}
	30% {
		transform: skewX(-6deg);
	}
	40% {
		transform: skewX(5deg);
	}
	50% {
		transform: skewX(-4deg);
	}
	60% {
		transform: skewX(3deg);
	}
	70% {
		transform: skewX(-2deg);
	}
	80% {
		transform: skewX(1deg);
	}
	90% {
		transform: skewX(0deg);
	}
	100% {
		transform: skewX(0deg);
	}
}

@keyframes append {
	0% {
		opacity: 0;
		transform: scale(0);
	}
	100% {
		opacity: 1;
		transform: scale(1);
	}
}

.bounce {
	animation: bounce 1s ease;
}

.shake {
	animation: shake 1s ease;
}

.swing {
	animation: swing 1s ease;
}

.wiggle {
	animation: wiggle 1s ease;
}

.blink {
	animation: blink 0.5s ease;
}

.append {
	animation: append 0.5s ease;
}

.fade {
	animation: wiggle 1s ease;
}

@media only screen and (min-width: 23rem) {
	.color-palette {
		grid-template-columns: repeat(2, 1fr);
	}
}

@media only screen and (min-width: 48rem) {
	.settings {
		grid-template-columns: repeat(3, 1fr);
	}
	.color-palette {
		grid-template-columns: repeat(3, 1fr);
	}
}

@media only screen and (min-width: 64rem) {
	header {
		padding: 2.25rem 0rem 1.25rem 0rem;
		height: 5rem;
		border-bottom: var(--border);
	}
	.settings {
		grid-template-columns: 3fr 3fr 2fr;
	}
	.color-palette {
		grid-template-columns: repeat(5, 1fr);
	}
	.color {
		padding: 3.5rem 0;
	}
}

@media only screen and (min-width: 80rem) {
	#main {
		grid-template-columns: 16rem 60rem 0;
		grid-gap: 2rem;
		overflow: visible;
	}
	#menu-button {
		display: none;
	}
	#menu-button+aside {
		position: sticky;
		transform: translateX(0rem);
	}
	.color:hover {
		z-index: 3;
		transform: scale(1.25);
		box-shadow: 0 0 1rem 0 rgba(0, 0, 0, 0.3);
	}
	.color:active {
		transform: scale(1.125);
	}
}

@media only screen and (min-width: 90rem) {
	#main {
		grid-template-columns: 16rem 60rem 10rem;
		grid-gap: 2rem;
	}
}

@media only screen and (min-width: 105rem) {}

@media only screen and (min-width: 120rem) {}